AWSTemplateFormatVersion: 2010-09-09
Description: Minimal Config Solution - AWS Config Auto Remediation

Resources:

  rConfigRole:
    Type: AWS::IAM::Role
    DependsOn: rConfigBucket
    #checkov:skip=CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [config.amazonaws.com]
            Action: ['sts:AssumeRole']
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSConfigRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: s3:GetBucketAcl
                Resource: !Sub arn:${AWS::Partition}:s3:::${rConfigBucket}
              - Effect: Allow
                Action: s3:PutObject
                Resource: !Sub arn:${AWS::Partition}:s3:::${rConfigBucket}/AWSLogs/${AWS::AccountId}/*
                Condition:
                  StringEquals:
                    s3:x-amz-acl: bucket-owner-full-control
              - Effect: Allow
                Action:
                - config:PutConfigRule
                - config:PutConfigurationRecorder
                - config:PutEvaluations
                - config:PutAggregationAuthorization
                - config:PutConfigurationAggregator
                - config:PutDeliveryChannel
                Resource: '*'

  rDeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    Properties:
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: One_Hour
      S3BucketName: !Ref rConfigBucket
      SnsTopicARN: !Ref rConfigTopic

  rConfigTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "config-topic-${AWS::AccountId}"
      DisplayName: AWS Config Notification Topic
      KmsMasterKeyId: "alias/aws/sns"

  rConfigTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: ConfigTopicPolicy
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: SNS:Publish
            Resource: '*'
      Topics:
        - !Ref rConfigTopic

  rConfigBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    #checkov:skip=CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
    #checkov:skip=CKV_AWS_21: "Ensure the S3 bucket has versioning enabled"
    Properties:
      BucketName: !Sub "awsconfig-${AWS::Region}-${AWS::AccountId}"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      AccessControl: LogDeliveryWrite

  rConfigRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Properties:
      Name: default
      RecordingGroup:
        AllSupported: false
        IncludeGlobalResourceTypes: false
        ResourceTypes:
          - AWS::EC2::Instance
      RoleARN: !GetAtt rConfigRole.Arn
